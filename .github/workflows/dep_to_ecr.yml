name: Deploy to ECR

on:
  push:
    branches:
      - main  # or the branch you want to deploy from

jobs:
  deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_REGION }}

    - name: Build and push Docker image to ECR
      id: build-image
      run: |
        docker build \
          --build-arg POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          --build-arg POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          --build-arg POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} \
          --build-arg POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} \
          --build-arg POSTGRES_DB=${{ secrets.POSTGRES_DB }} \
          --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          --build-arg AWS_REGION_NORTH=${{ secrets.AWS_REGION_NORTH }} \
          --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
          --build-arg AWS_BUCKET=${{ secrets.AWS_BUCKET }} \
          --build-arg ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }} \
          --build-arg ENCRYPTION_IV=${{ secrets.ENCRYPTION_IV }} \
          --build-arg NODE_ENV=${{ secrets.NODE_ENV }} \
          --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
          --build-arg API_PORT=${{ secrets.API_PORT }} \
          -t ${{ secrets.ECR_REPOSITORY }}:latest .
        docker push ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Log out from ECR
      run: docker logout ${{ secrets.AWS_REGION }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    - name: Deploy container with PostgreSQL connection to ECS or other services
      run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment --region ${{ secrets.AWS_REGION }}
  
